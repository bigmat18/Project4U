# Generated by Django 3.2.12 on 2022-04-02 10:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('Core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsParagraph',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('order_paragraph', models.IntegerField(default=0, verbose_name='order paragraph')),
                ('content', models.TextField(verbose_name='content')),
            ],
            options={
                'verbose_name': 'News Paragraph',
                'verbose_name_plural': 'News Paragraphes',
                'db_table': 'news_paragraph',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('created_at', models.DateTimeField(default=None, editable=False, help_text='Data di creazione del modello', null=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=None, editable=False, help_text='Data di aggiornamento del modello', null=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('view_num', models.PositiveBigIntegerField(default=0, verbose_name='views number')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', related_query_name='posts', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts_likes', related_query_name='posts_likes', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', related_query_name='posts', to='Core.project')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.post')),
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('caption', models.CharField(blank=True, help_text="Didascalia descrittiva dell'immagine", max_length=256, null=True, verbose_name='caption')),
                ('title', models.CharField(db_column='title', max_length=64, verbose_name='title')),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('intro', models.CharField(max_length=516, verbose_name='intro')),
                ('content', models.TextField(verbose_name='content')),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
                'db_table': 'news',
            },
            bases=('Core.post', models.Model),
        ),
        migrations.CreateModel(
            name='ProjectQuestion',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.post')),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('question', models.TextField()),
            ],
            options={
                'verbose_name': 'Project Question',
                'verbose_name_plural': 'Project Questions',
                'db_table': 'project_question',
            },
            bases=('Core.post',),
        ),
        migrations.CreateModel(
            name='TextPost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.post')),
                ('text', models.TextField()),
            ],
            options={
                'verbose_name': 'Text Post',
                'verbose_name_plural': 'Text Posts',
                'db_table': 'text_post',
            },
            bases=('Core.post',),
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('created_at', models.DateTimeField(default=None, editable=False, help_text='Data di creazione del modello', null=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=None, editable=False, help_text='Data di aggiornamento del modello', null=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, max_length=516, null=True, verbose_name='text')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_postcomment_author', related_query_name='core_postcomment_author', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='core_postcomment_likes', related_query_name='core_postcomment_likes', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comments', to='Core.post')),
            ],
            options={
                'verbose_name': 'Post Comment',
                'verbose_name_plural': 'Post Comments',
                'db_table': 'post_comment',
            },
        ),
        migrations.CreateModel(
            name='NewsParagraphImage',
            fields=[
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('caption', models.CharField(blank=True, help_text="Didascalia descrittiva dell'immagine", max_length=256, null=True, verbose_name='caption')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', related_query_name='images', to='Core.newsparagraph')),
            ],
            options={
                'verbose_name': 'News Paragraph Image',
                'verbose_name_plural': 'News Paragraph Images',
                'db_table': 'news_paragraph_image',
            },
        ),
        migrations.CreateModel(
            name='ProjectAnswer',
            fields=[
                ('created_at', models.DateTimeField(default=None, editable=False, help_text='Data di creazione del modello', null=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=None, editable=False, help_text='Data di aggiornamento del modello', null=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_answers', related_query_name='project_answers', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', related_query_name='answers', to='Core.projectquestion')),
            ],
            options={
                'verbose_name': 'Project Answer',
                'verbose_name_plural': 'Project Answers',
                'db_table': 'project_answer',
            },
        ),
        migrations.AddField(
            model_name='newsparagraph',
            name='news',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paragraphes', related_query_name='peragraphes', to='Core.news'),
        ),
    ]
