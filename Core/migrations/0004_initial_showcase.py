# Generated by Django 3.2.7 on 2022-01-12 11:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('Core', '0003_initial_project'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('created_at', models.DateTimeField(default=None, editable=False, help_text='Data di creazione del modello', null=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=None, editable=False, help_text='Data di aggiornamento del modello', null=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_message', models.CharField(choices=[('TXT', 'TextMessage'), ('EV', 'Event'), ('ID', 'Idea')], default='TXT', max_length=32)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', related_query_name='messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('text', models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('anonymus_creator', models.BooleanField(default=False, verbose_name='anonymus creator')),
                ('anonymus_voters', models.BooleanField(default=False, verbose_name='anonymus voters')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='poll', related_query_name='poll', to='Core.message')),
            ],
            options={
                'verbose_name': 'Polls',
                'verbose_name_plural': 'Polls',
                'db_table': 'poll',
            },
        ),
        migrations.AlterField(
            model_name='usereducation',
            name='text',
            field=models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.message')),
                ('data', models.DateTimeField(help_text="Data dell'evento", verbose_name='date')),
                ('text', models.TextField(blank=True, db_column='description', null=True, verbose_name='description')),
                ('partecipants', models.ManyToManyField(help_text="Partecipanti all'evento", related_name='events', related_query_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'event',
            },
            bases=('Core.message', models.Model),
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Core.message')),
                ('text', models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text')),
            ],
            options={
                'verbose_name': 'Text Message',
                'verbose_name_plural': 'Text Messages',
                'db_table': 'text_message',
            },
            bases=('Core.message', models.Model),
        ),
        migrations.CreateModel(
            name='Showcase',
            fields=[
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('text', models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='showcases', related_query_name='showcases', to='Core.project')),
                ('users', models.ManyToManyField(blank=True, related_name='showcases', related_query_name='showcases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Showcase',
                'verbose_name_plural': 'Showcases',
                'db_table': 'showcase',
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('text', models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', related_query_name='options', to='Core.poll')),
                ('votes', models.ManyToManyField(help_text="I voti dati all'opzione del sondaggio", related_name='poll_option_votes', related_query_name='poll_option_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Poll Option',
                'verbose_name_plural': 'Poll Options',
                'db_table': 'poll_option',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='showcase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', related_query_name='messages', to='Core.showcase'),
        ),
        migrations.AddField(
            model_name='message',
            name='viewed_by',
            field=models.ManyToManyField(related_name='messages_visualize', related_query_name='messages_visualize', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EventUpdate',
            fields=[
                ('text', models.TextField(blank=True, help_text='Testo del modello', max_length=516, null=True, verbose_name='text')),
                ('created_at', models.DateTimeField(default=None, editable=False, help_text='Data di creazione del modello', null=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=None, editable=False, help_text='Data di aggiornamento del modello', null=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_updates', related_query_name='event_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Update',
                'verbose_name_plural': 'Event Updates',
                'db_table': 'event_update',
            },
        ),
        migrations.CreateModel(
            name='EventTask',
            fields=[
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('checked', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', related_query_name='tasks', to='Core.event')),
            ],
            options={
                'verbose_name': 'EventTask',
                'verbose_name_plural': 'EventTasks',
                'db_table': 'event_task',
            },
        ),
    ]
